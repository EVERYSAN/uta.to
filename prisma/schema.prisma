generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Creator {
  id               String   @id @default(cuid())
  platform         String
  platformUserId   String
  name             String
  thumbnailUrl     String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  videos           Video[]
  @@unique([platform, platformUserId])
}

model SupportEvent {
  id        String   @id @default(cuid())
  videoId   String
  video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)

  // ★ コードが groupBy / sum している
  amount    Int      @default(1)

  // ★ /api/support が重複判定に使っている
  ipHash    String?  // ハッシュなので可変無し、null許容でもOK

  createdAt DateTime @default(now())

  @@index([videoId, createdAt])
  @@index([videoId, ipHash, createdAt])
}

model Video {
  id               String   @id @default(cuid())
  platform         String
  platformVideoId  String
  title            String
  description      String?
  url              String
  thumbnailUrl     String?
  durationSec      Int?
  channelTitle     String   @default("")
  views            Int      @default(0)   
  likes            Int      @default(0)   
  publishedAt      DateTime
  creator          Creator? @relation(fields: [creatorId], references: [id])
  rawJson          Json?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  metrics          VideoMetric[]
  supportEvents  SupportEvent[]
  supportCount     Int      @default(0) // ✅ 累計応援ポイント（即時反映用）
  creatorId        String?   // 追加：YouTubeのchannelId等を格納（nullable
  // ★ 追加: 後段で消す/絞る/表示切替に使う最小カラム
  isShort    Boolean? @default(false)  // 60秒以下なら true 目安
  regionCode String?  @db.VarChar(2)   // "JP" を保存
  langHint   String?  @db.VarChar(8)   // "ja" など判定のヒント

  // 逆方向 relation
  statsSnapshots   StatsSnapshot[]
  // ★ コード互換用（ranking API が select している）
  supportPoints Int      @default(0)


  @@unique([platform, platformVideoId])
  @@index([publishedAt])
  @@index([views])
  @@index([likes])
}

model StatsSnapshot {
  id         String   @id @default(cuid())
  video      Video    @relation(fields: [videoId], references: [id])
  videoId    String
  capturedAt DateTime @default(now())
  views      Int?
  likes      Int?
  comments   Int?
  bookmarks  Int?
}

model VideoMetric {
  id       String   @id @default(cuid())
  videoId  String
  date     DateTime      // UTCの00:00（1日単位のスナップショット）
  views    Int       @default(0)
  likes    Int       @default(0)

  video    Video     @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([videoId, date], name: "videoId_date")
  @@index([date])
}









