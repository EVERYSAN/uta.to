// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // ふだんは DATABASE_URL を使うのが一般的
  url       = env("DATABASE_URL")
  // Neon などでマイグレーション用に直結URLを分ける場合はコメントを外す
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}


model Video {
  id               String   @id @default(cuid())
  platform         String
  platformVideoId  String
  title            String
  url              String
  channelTitle     String?
  thumbnailUrl     String?
  publishedAt      DateTime?
  durationSec      Int?
  view             Int?
  like             Int       @default(0)
  supportPoints    Int       @default(0)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // 逆リレーション（これが無くて怒られていました）
  supportEvents     SupportEvent[]
  supportSnapshots  SupportSnapshot[]

  @@unique([platform, platformVideoId], name: "platform_platformVideoId")
}

model SupportEvent {
  id         String    @id @default(cuid())
  videoId    String
  amount     Int       @default(1)
  ipHash     String
  createdAt  DateTime  @default(now())

  // 親への関連
  video  Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@index([videoId, createdAt])
}

model SupportSnapshot {
  // 1時間ごとの集計。videoId + hourStart を複合主キーにして重複を防ぐ
  videoId    String
  hourStart  DateTime
  amount     Int       @default(0)
  createdAt  DateTime  @default(now())

  // 親への関連
  video  Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@id([videoId, hourStart])
  @@index([hourStart])
}



