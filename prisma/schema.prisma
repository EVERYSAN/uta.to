generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Creator {
  id               String   @id @default(cuid())
  platform         String
  platformUserId   String
  name             String
  thumbnailUrl     String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  videos           Video[]
  @@unique([platform, platformUserId])
}

model Video {
  id               String   @id @default(cuid())
  platform         String
  platformVideoId  String
  title            String
  description      String?
  url              String
  thumbnailUrl     String?
  durationSec      Int?
  channelTitle     String   @default("")
  views            Int      @default(0)   
  likes            Int      @default(0)   
  publishedAt      DateTime
  creator          Creator? @relation(fields: [creatorId], references: [id])
  creatorId        String?
  rawJson          Json?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  metrics          VideoMetric[]

  // 逆方向 relation
  statsSnapshots   StatsSnapshot[]

  @@unique([platform, platformVideoId])
  @@index([publishedAt])
  @@index([views])
  @@index([likes])
}

model StatsSnapshot {
  id         String   @id @default(cuid())
  video      Video    @relation(fields: [videoId], references: [id])
  videoId    String
  capturedAt DateTime @default(now())
  views      Int?
  likes      Int?
  comments   Int?
  bookmarks  Int?
}

model VideoMetric {
  id       String   @id @default(cuid())
  videoId  String
  date     DateTime      // UTCの00:00（1日単位のスナップショット）
  views    Int       @default(0)
  likes    Int       @default(0)

  video    Video     @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([videoId, date], name: "videoId_date")
  @@index([date])
}



